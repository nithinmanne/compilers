---
name: prog
externs:
  name: externs
  externs:
  - name: extern
    ret_type: int
    globid: arg
    decls:
      name: tdecls
      tdecls:
      - name: tdecl
        type: int
  - name: extern
    ret_type: float
    globid: argf
    decls:
      name: tdecls
      tdecls:
      - name: tdecl
        type: int
  - name: extern
    ret_type: int
    globid: getarg
    decls:
      name: tdecls
      tdecls:
      - name: tdecl
        type: int
  - name: extern
    ret_type: float
    globid: getargf
    decls:
      name: tdecls
      tdecls:
      - name: tdecl
        type: int
funcs:
  name: funcs
  funcs:
  - name: func
    ret_type: int
    globid: fib
    decls:
      name: vdecls
      vdecls:
      - name: vdecl
        type: int
        var: $n
    blk:
      name: blk
      contents:
        name: stmts
        stmts:
        - name: if
          cond:
            name: binop
            type: bool
            op: lt
            lhs:
              name: varval
              type: int
              var: $n
            rhs:
              name: lit
              type: int
              value: 2
          stmt:
            name: if
            cond:
              name: binop
              type: bool
              op: eq
              lhs:
                name: varval
                type: int
                var: $n
              rhs:
                name: lit
                type: int
                value: 0
            stmt:
              name: ret
              exp:
                name: lit
                type: int
                value: 0
            else_stmt:
              name: ret
              exp:
                name: lit
                type: int
                value: 1
          else_stmt: null
        - name: vardeclstmt
          vdecl:
            name: vdecl
            type: int
            var: $a
          exp:
            name: funccall
            type: int
            globid: fib
            params:
              name: exps
              exps:
              - name: binop
                type: int
                op: sub
                lhs:
                  name: varval
                  type: int
                  var: $n
                rhs:
                  name: lit
                  type: int
                  value: 1
        - name: vardeclstmt
          vdecl:
            name: vdecl
            type: int
            var: $b
          exp:
            name: funccall
            type: int
            globid: fib
            params:
              name: exps
              exps:
              - name: binop
                type: int
                op: sub
                lhs:
                  name: varval
                  type: int
                  var: $n
                rhs:
                  name: lit
                  type: int
                  value: 2
        - name: ret
          exp:
            name: binop
            type: int
            op: add
            lhs:
              name: varval
              type: int
              var: $a
            rhs:
              name: varval
              type: int
              var: $b
  - name: func
    ret_type: void
    globid: inc
    decls:
      name: vdecls
      vdecls:
      - name: vdecl
        type: ref int
        var: $n
    blk:
      name: blk
      contents:
        name: stmts
        stmts:
        - name: expstmt
          exp:
            name: assign
            type: int
            var: $n
            exp:
              name: binop
              type: int
              op: add
              lhs:
                name: varval
                type: int
                var: $n
              rhs:
                name: lit
                type: int
                value: 1
  - name: func
    ret_type: void
    globid: things
    decls:
      name: vdecls
      vdecls:
      - name: vdecl
        type: ref int
        var: $n
    blk:
      name: blk
      contents:
        name: stmts
        stmts:
        - name: while
          cond:
            name: uop
            type: bool
            op: not
            exp:
              name: binop
              type: bool
              op: gt
              lhs:
                name: varval
                type: int
                var: $n
              rhs:
                name: lit
                type: int
                value: 100
          stmt:
            name: blk
            contents:
              name: stmts
              stmts:
              - name: expstmt
                exp:
                  name: assign
                  type: int
                  var: $n
                  exp:
                    name: binop
                    type: int
                    op: sub
                    lhs:
                      name: binop
                      type: int
                      op: mul
                      lhs:
                        name: varval
                        type: int
                        var: $n
                      rhs:
                        name: varval
                        type: int
                        var: $n
                    rhs:
                      name: lit
                      type: int
                      value: 2
  - name: func
    ret_type: int
    globid: run
    decls: null
    blk:
      name: blk
      contents:
        name: stmts
        stmts:
        - name: printslit
          string: 'fib(5):'
        - name: vardeclstmt
          vdecl:
            name: vdecl
            type: int
            var: $val
          exp:
            name: funccall
            type: int
            globid: fib
            params:
              name: exps
              exps:
              - name: lit
                type: int
                value: 5
        - name: print
          exp:
            name: varval
            type: int
            var: $val
        - name: printslit
          string: 'fib(5)+1:'
        - name: expstmt
          exp:
            name: funccall
            type: void
            globid: inc
            params:
              name: exps
              exps:
              - name: varval
                type: int
                var: $val
        - name: print
          exp:
            name: varval
            type: int
            var: $val
        - name: printslit
          string: 'something else:'
        - name: expstmt
          exp:
            name: funccall
            type: void
            globid: things
            params:
              name: exps
              exps:
              - name: varval
                type: int
                var: $val
        - name: print
          exp:
            name: varval
            type: int
            var: $val
        - name: ret
          exp:
            name: lit
            type: int
            value: 0
...
